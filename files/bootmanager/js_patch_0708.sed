/^\(const \)\?TableCalls/i \
function onChangeLinuxFsStart(e){var s=jsl.evtTarget(e).id.substr("uiLinux_fs_start-".length);if(!s)return;jsl.show(s+"_branding");jsl.hide(("running"==s?"alternative":"running")+"_branding")}\
function buildBootmanager(data) { function nl(frag, cnt = 1) { while (cnt--) html2.add(frag, html2.br()) } var m = data["localized"]; var v = data["values"]; var r = html2.fragment(); if (0 == v.length) { html2.add(r, html2.h3({}, m["nodata"])); return r } html2.add(r, html2.h3({}, m["headline"])); nl(r); var ct = html2.span(); var at = html2.span(); var cs = v["current_switch_value"]; html2.add(ct, html2.strong({ style: m["style_caption"] }, m["currsys"])); html2.add(ct, html2.printf(m["switchvalue"], cs)); nl(ct, 2); html2.add(ct, html2.printf(m["version"], v["active_version"], v["active_date"])); if (v["active_modified_at"]) { nl(ct); html2.add(ct, html2.printf(m["modified"], v["active_modified_at"], v["active_modified_by"])) } nl(ct, 2); html2.add(at, html2.strong({ style: m["style_caption"] }, m["altsys"])); html2.add(at, html2.printf(m["switchvalue"], cs ? ((parseInt(cs) + 1) % 2).toString() : "0")); nl(at, 2); var inactive = v["inactive_version"]; if ("missing" != inactive) if (inactive.length > 0) { html2.add(at, html2.printf(m["version"], v["inactive_version"], v["inactive_date"])); if (v["inactive_modified_at"]) { nl(at); html2.add(at, html2.printf(m["modified"], v["inactive_modified_at"], v["inactive_modified_by"])) } } else m["altinv"].split("\\n").forEach(function(l) { html2.add(at, l); nl(at) }); else html2.add(at, m["altmiss"]); nl(at, 2); var radios = html2.radios({ name: "linux_fs_start", selected: v["system_is_switched"] ? "alternative" : "running", attr: { disabled: "missing" == inactive ? true : false, onClick: onChangeLinuxFsStart }, options: [{ value: "running", text: ct }, { value: "alternative", text: at }] }); html2.add(r, radios); html2.add(r, html2.h4({}, m["brndhead"])); var cb = v["switch_branding_support"]; if (!cb) { html2.add(r, html2.span({}, m["brndunsupp"])); html2.add(r, html2.hiddenInput({ name: "alternative_branding", value: v["active_branding"] })) } else { var rb = html2.span({ id: "running_branding", style: v["system_is_switched"] ? "display: none" : "" }); if ("both_fixed" == cb || "running_fixed" == cb) { html2.add(rb, html2.printf(m["brndcurrfixed"], html2.strong({}, v["active_branding"]))); html2.add(r, html2.hiddenInput({ name: "running_branding", value: v["active_branding"] })) } else if (v["active_brandings"].split(" ").length > 1) { html2.add(rb, html2.printf(m["brndmulti"], html2.strong({}, v["active_branding"]))); nl(rb); var sb = html2.selectBoxPlain ? html2.selectBoxPlain({ id: "uiRunningBranding", name: "running_branding" }) : html2.selectBox({ id: "uiRunningBranding", name: "running_branding" }); v["active_brandings"].split(" ").forEach(function(o) { sb.options.add(html2.option({ value: o, selected: v["active_branding"] == o ? true : false }, o)) }); html2.add(rb, html2.label({ for: "uiRunningBranding", style: m["style_sblbl"] }, m["brndset"])); html2.add(rb, sb) } else { html2.add(rb, html2.printf(m["brndcurrsingle"], html2.strong({}, v["active_branding"]))); html2.add(r, html2.hiddenInput({ name: "running_branding", value: v["active_branding"] })) } html2.add(r, rb); var ab = html2.span({ id: "alternative_branding", style: v["system_is_switched"] ? "" : "display: none" }); if ("missing" != inactive) if (inactive.length > 0) if ("both_fixed" == cb || "alternative_fixed" == cb) { html2.add(ab, html2.printf(m["brndaltfixed"], html2.strong({}, v["inactive_brandings"]))); html2.add(r, html2.hiddenInput({ name: "alternative_branding", value: v["alternative_branding"] })) } else if (v["inactive_brandings"].split(" ").length > 1) { html2.add(ab, html2.printf(m["brndmulti"], html2.strong({}, v["active_branding"]))); nl(ab); var asb = html2.selectBoxPlain ? html2.selectBoxPlain({ id: "uiAlternativeBranding", name: "alternative_branding", style: m["style_selbrand"] }) : html2.selectBox({ id: "uiAlternativeBranding", name: "alternative_branding", style: m["style_selbrand"] }); v["inactive_brandings"].split(" ").forEach(function(o) { asb.options.add(html2.option({ value: o, selected: v["active_branding"] == o ? true : false }, o)) }); if (0 == asb.selectedOptions.length) asb.options.forEach(function(o) { if (o.value == v["active_branding"]) o.selected = true }); html2.add(ab, html2.label({ for: "uiAlternativeBranding", style: m["style_sblbl"] }, m["brndset"])); html2.add(ab, asb) } else { html2.add(ab, html2.printf(m["brndaltsingle"], html2.strong({}, v["inactive_brandings"]))); if (v["inactive_brandings"] == v["active_branding"]) html2.add(ab, m["brndaltnochg"]); else { html2.add(ab, html2.printf(m["brndaltset"], html2.strong({}, v["active_branding"]))); nl(ab); html2.add(ab, html2.printf(m["brndaltnew"], html2.strong({}, v["inactive_brandings"]))) } html2.add(r, html2.hiddenInput({ name: "alternative_branding", value: v["inactive_brandings"] })) } else html2.add(ab, m["brndaltinv"]); html2.add(r, ab) } return r }
/^if(data.actions)/i \
if(data.bm){html2.add(content,buildBootmanager(data.bm));}
s/\(html2.add(content,drawHints());\)\(html2.add(content,drawFoot());\)/\1if(data.bm){html2.add(content,buildBootmanager(data.bm));};\2/
s/\(activeCalls:TYPES.OBJECT,\)\(timestamp:TYPES.NUMBER\)/\1bm:TYPES.OBJECT,\2/

# MODFS_MODSCRIPT
# SPDX-License-Identifier: GPL-2.0-or-later
# SUPPORTS precheck postcheck install language(en,de)
# NAME enable rc.user execution
# DESCRIPTION en
# execute commands from TFFS node 98 at system startup
# DESCRIPTION de
# Kommandos aus dem TFFS-Node 98 beim Systemstart ausführen
# EOH
#
# process parameters
#
language=$1
rootdir=$2
mode=$3
step=$4
[ ${#4} -eq 0 ] && exit 59 # invalid call
#
# execute the requested step
#
rc=0
modfile="$rootdir/etc/init.d/rc.tail.sh"
minor=98
insertline="rcuser=/var/tmp/rc.user;mkconfigfile \$rcuser.tffs $minor;cat \$rcuser.tffs >\$rcuser;rm \$rcuser.tffs;test -s \$rcuser && delay -d 1 RCUSER \"/bin/sh \$rcuser\""
systemd_initfile="$rootdir/etc/boot.d/core/rcuser"
systemd_servicefile="$rootdir/lib/systemd/system/rcuser.service"
find_line()
{
	local line rc=0
	line="$(sed -n -e "\\#$insertline#p" $modfile)"
	[ ${#line} -gt 0 ] && rc=0 || rc=1
	return $rc
}
create_rc_user_file()
{
cat <<EOT
#! /bin/sh
. /etc/boot.d/msg
. /etc/boot.d/major_nr
grep -q "rcuser=n" /proc/cmdline 2>/dev/null && msg_warn "Skipping rc.user content due to kernel command line." && exit 0
rcuser=/var/tmp/rc.user
mknod \$rcuser.tffs c \$(major_nr tffs) $minor
cat \$rcuser.tffs > \$rcuser
rm \$rcuser.tffs
if ! test -s \$rcuser; then
msg_warn "rc.user file is empty."
exit 0
fi
msg_info "Execution of 'rc.user' is being started now ..."
/bin/busybox nohup /bin/sh \$rcuser 1>\$rcuser.log 2>&1 </dev/null &
exit 0
EOT
}
create_rc_user_service()
{
cat <<EOT
[Unit]
ExecStart=/bin/sh ${systemd_initfile#$rootdir}
Type=oneshot
After=net.service
[Install]
WantedBy=multi-user.target
EOT
}
case $step in
	precheck)
		if [ -f "$modfile" ]; then
			find_line
			rc=$?
		else
			test -f "$systemd_initfile"
			rc=$?
		fi
		if [ $rc -eq 0 ]; then
			case "$language" in
				de)
					echo "Die Modifikation wurde bereit angewendet."
					;;
				*)
					echo "The startup file is modified already."
					;;
			esac
			rc=1
		else
			rc=0
		fi
		;;
	postcheck)
		if [ -f "$modfile" ]; then
			find_line
			rc=$?
		else
			test -f "$systemd_initfile"
			rc=$?
		fi
		if [ $rc -ne 0 ]; then
			case "$language" in
				de)
					echo "Die Modifikation war nicht erfolgreich."
					;;
				*)
					echo "The startup file seems to be unmodified."
					;;
			esac
			rc=1
		else
			if [ -d "/proc/sys/urlader" ]; then
				tmpdir=/var/tmp/${0##*/}_$$
				mkdir -p "$tmpdir"
				mknod "$tmpdir/tffs" c $(sed -n -e 's|\([0-9]*\) tffs|\1|p' /proc/devices) $minor
				cat "$tmpdir/tffs" >"$tmpdir/content" 2>/dev/null
				if [ ! -s "$tmpdir/content" ]; then
					case "$language" in
						de)
							echo "eventadd 1 \"Die Datei rc.user (TFFS-Minor-ID $minor) wird abgearbeitet ...\"" >"$tmpdir/tffs"
							echo -e "Die Datei 'rc.user/debug.cfg' war leer, es wurde ein Kommando zum Protokollieren\ndes Starts im Eventlog eingefügt."
							;;
						*)
							echo "eventadd 1 \"The commands within the file 'rc.user' (TFFS minor id $minor) will be executed now ...\"" >"$tmpdir/tffs"
							echo -e "Your command file 'rc.user/debug.cfg' was empty. A command to log the start of\nexecution was added to it."
							;;
					esac
				fi
				rm -r $tmpdir
			fi
			rc=0
		fi
		;;
	install)
		if [ -f "$modfile" ]; then
			grep -q -- "^exit 0$" "$modfile" 2>/dev/null && sed -e "\$i$insertline" -i "$modfile" || sed -e "\$a$insertline" -i "$modfile"
			rc=0
		else
			create_rc_user_file > "$systemd_initfile"
			chmod 755 "$systemd_initfile"
			create_rc_user_service > "$systemd_servicefile"
			rc=0
		fi
		;;
	*)
		rc=59
		;;
esac
exit $rc

# MODFS_MODSCRIPT
# SPDX-License-Identifier: GPL-2.0-or-later
# SUPPORTS precheck postcheck install language(en,de)
# NAME volatile storage on NAS
# DESCRIPTION en
# mount volatile storage on a NAS sub-directory
# DESCRIPTION de
# Mounten eines flüchtigen Speichers in einem NAS-Verzeichnis
# EOH
#
# process parameters
#
language=$1
rootdir="$2"
mode=$3
step=$4
[ ${#4} -eq 0 ] && exit 59 # invalid call
#
# constants
#
init_script="etc/init.d/S15-filesys"
boot_script="etc/boot.d/core/files"
directory_name="${MOD_VOLATILE_NAS_DIR_DIRNAME:-volatile}"
limit_space="${MOD_VOLATILE_NAS_DIR_LIMIT:-0}"
[ "$limit_space" = "0" ] && limited="" || limited=" -o size=$limit_space"
search_string="mount -t tmpfs tmpfs /var/media/ftp"
mkdir_command="mkdir -p /var/media/ftp/$directory_name"
mount_command="mount -t tmpfs tmpfs /var/media/ftp/$directory_name$limited"
#
# execute the requested step
#
rc=0
#
case $step in
	precheck)
		if [ -f "$rootdir/$init_script" ]; then
			grep -q -- "$search_string" "$rootdir/$init_script" 2>/dev/null
		elif [ -f "$rootdir/$boot_script" ]; then
			grep -q -- "$search_string" "$rootdir/$boot_script" 2>/dev/null
		else
			case "$language" in
				de)
					printf "Die zu modfifzierende Stelle wurde nicht gefunden in der Firmware.\n"
					;;
				*)
					printf "Unable to locate the code to be patched.\n"
					;;
			esac
			exit 2
		fi
		rc=$?
		if [ $rc -eq 0 ]; then
			case "$language" in
				de)
					printf "Die Modifikation wurde bereits ausgeführt.\n"
					;;
				*)
					printf "The patch has been applied already.\n"
					;;
			esac
			rc=1
		else
			rc=0
		fi
		;;
	postcheck)
		if [ -f "$rootdir/$init_script" ]; then
			grep -q -- "$search_string" "$rootdir/$init_script" 2>/dev/null
		elif [ -f "$rootdir/$boot_script" ]; then
			grep -q -- "$search_string" "$rootdir/$boot_script" 2>/dev/null
		else
			case "$language" in
				de)
					printf "Die zu modfifzierende Stelle wurde nicht gefunden in der Firmware.\n"
					;;
				*)
					printf "Unable to locate the code to be patched.\n"
					;;
			esac
			exit 2
		fi
		rc=$?
		if [ $rc -eq 1 ]; then
			case "$language" in
				de)
					printf "Die Modifikation wurde NICHT erfolgreich ausgeführt.\n"
					;;
				*)
					printf "The patch was NOT applied successfully.\n"
					;;
			esac
		fi
		;;
	install)
		if [ -f "$rootdir/$init_script" ]; then
			printf "%s\n%s\n" "$mkdir_command" "$mount_command" >> "$rootdir/$init_script"
		elif [ -f "$rootdir/$boot_script" ]; then
			printf "%s\n%s\n" "$mkdir_command" "$mount_command" >> "$rootdir/$boot_script"
		else
			exit 2
		fi
		case "$language" in
			de)
				printf "Unter dem NAS-Pfad '%s' wird zusätzlich ein flüchtiger Speicher%sverfügbar gemacht.\n" "$directory_name" "$([ -z "$limited" ] || printf " (Größe: %d) " "$limit_space")"
				;;
			*)
				printf "NAS mount-point '%s' added with%svolatile memory.\n" "$directory_name" "$([ -z "$limited" ] || printf " %dB of " "$limit_space")"
				;;
		esac
		rc=0
		;;
	*)
		rc=59
		;;
esac
#
exit $rc
